>HT
mkdir Weatherproject
cd Weatheproject
touch index.html app.js
npm init
npm i express


//app.js
const express = require("express");
const app = express();

app.get("/", function(req, res){
   res.send("Serveris up and  running")
})


app.listen(3000, function()) {
  console.log("server is running on ")
}

>HT
nodemon app.js
________________________________________________________________
How to make get request to open weather app server
fetch data back as json
parse data

5 ways of making http requests in node js
________________________________________________________________

1) standard https module
	//receive data in chunks,parse data manually, trivial if JSON f

//How to use https module?
const https = require('https');

https.get('https://api.nasa.gov/planetary/apod?api_key=DEMO_KEY', (resp) => {
  let data = '';

  // A chunk of data has been received.
  resp.on('data', (chunk) => {
    data += chunk;
  });

  // The whole response has been received. Print out the result.
  resp.on('end', () => {
    console.log(JSON.parse(data).explanation);
  });

}).on("error", (err) => {
  console.log("Error: " + err.message);
});



2) Request module

npm install request@2.81.0

const request = require('request');

request('https://api.nasa.gov/planetary/apod?api_key=DEMO_KEY', { json: true }, (err, res, body) => {
  if (err) { return console.log(err); }
  console.log(body.url);
  console.log(body.explanation);
});


3)Axios module
npm install axios@0.21.1

const axios = require('axios');

axios.get('https://api.nasa.gov/planetary/apod?api_key=DEMO_KEY')
  .then(response => {
    console.log(response.data.url);
    console.log(response.data.explanation);
  })
  .catch(error => {
    console.log(error);
  });


4) SuperAgent
npm install superagent@6.1.0

const superagent = require('superagent');

superagent.get('https://api.nasa.gov/planetary/apod')
.query({ api_key: 'DEMO_KEY', date: '2017-08-02' })
.end((err, res) => {
  if (err) { return console.log(err); }
  console.log(res.body.url);
  console.log(res.body.explanation);
});